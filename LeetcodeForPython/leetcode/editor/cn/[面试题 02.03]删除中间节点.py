from typing import *


# ÂÆûÁé∞‰∏ÄÁßçÁÆóÊ≥ïÔºåÂà†Èô§ÂçïÂêëÈìæË°®‰∏≠Èó¥ÁöÑÊüê‰∏™ËäÇÁÇπÔºàÂç≥‰∏çÊòØÁ¨¨‰∏Ä‰∏™ÊàñÊúÄÂêé‰∏Ä‰∏™ËäÇÁÇπÔºâÔºåÂÅáÂÆö‰Ω†Âè™ËÉΩËÆøÈóÆËØ•ËäÇÁÇπ„ÄÇ
# 
#  
# 
#  Á§∫‰æãÔºö 
# 
#  ËæìÂÖ•ÔºöÂçïÂêëÈìæË°®a->b->c->d->e->f‰∏≠ÁöÑËäÇÁÇπc
# ÁªìÊûúÔºö‰∏çËøîÂõû‰ªª‰ΩïÊï∞ÊçÆÔºå‰ΩÜËØ•ÈìæË°®Âèò‰∏∫a->b->d->e->f
#  
#  Related Topics ÈìæË°® 
#  üëç 55 üëé 0


# leetcode submit region begin(Prohibit modification and deletion)
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None


class Solution:
    def deleteNode(self, node):
        """
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """
        node.val = node.next.val
        node.next = node.next.next


# leetcode submit region end(Prohibit modification and deletion)


if __name__ == '__main__':
    a = ListNode(1)
    b = ListNode(2)
    c = ListNode(3)
    a.next = b
    b.next = c

    b = b.next

    cur = a
    while cur is not None:
        print(cur.val)
        cur = cur.next
    pass
